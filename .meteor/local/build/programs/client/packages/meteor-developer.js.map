)]}'
{"version":3,"file":"/packages/meteor-developer.js","sources":["meteor-developer/meteor_developer_common.js","meteor-developer/meteor_developer_configure.html","meteor-developer/meteor_developer_configure.js","meteor-developer/meteor_developer_client.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gD;;;;;;;;;;;;;;;;;;;;ACCA,kF;AACA,kB;AACA,sB;AACA,0c;AACA,kB;AACA,+B;AACA,sD;AACA,uG;AACA,I;;;;;;;;;;;;;;;;;;;ACTA,8E;AACA,8B;AACA,E;;AAEA,6E;AACA,U;AACA,4C;AACA,6C;AACA,I;AACA,E;;;;;;;;;;;;;;;;;;;ACTA,6B;;AAEA,4D;AACA,mF;AACA,4E;AACA,W;AACA,+E;AACA,uC;AACA,6E;AACA,gD;AACA,mB;AACA,G;;AAEA,4D;AACA,+B;AACA,K;AACA,gB;AACA,wC;AACA,gF;AACA,W;AACA,G;;AAEA,wC;;AAEA,gB;AACA,qD;AACA,oC;AACA,gC;AACA,uC;;AAEA,mC;AACA,uE;;AAEA,qF;;AAEA,kB;AACA,a;AACA,qE;AACA,K;AACA,iB;AACA,iB;AACA,K;AACA,I;AACA,E;;AAEA,8D","sourcesContent":["METEOR_DEVELOPER_URL = \"https://www.meteor.com\";\n","\nTemplate.__define__(\"configureLoginServiceDialogForMeteorDeveloper\", (function() {\n  var self = this;\n  var template = this;\n  return [ HTML.Raw(\"<p>\\n    First, you'll need to get a Meteor developer account Client ID.\\n    Follow these steps:\\n  </p>\\n  \"), HTML.OL(HTML.Raw('\\n    <li> Visit <a href=\"https://www.meteor.com/account-settings\" target=\"_blank\">https://www.meteor.com/account-settings</a> and sign in.\\n    </li>\\n    <li> Click \"New app\" in the \"Meteor developer account apps\" section\\n      and give your app a name.</li>\\n    '), HTML.LI(\" Add\\n      \", HTML.SPAN({\n    \"class\": \"url\"\n  }, \"\\n        \", function() {\n    return Spacebars.mustache(self.lookup(\"siteUrl\"));\n  }, \"_oauth/meteor-developer?close\\n      \"), \"\\n      as an Allowed Redirect URL.\\n    \"), \"\\n  \") ];\n}));\n","Template.configureLoginServiceDialogForMeteorDeveloper.siteUrl = function () {\n  return Meteor.absoluteUrl();\n};\n\nTemplate.configureLoginServiceDialogForMeteorDeveloper.fields = function () {\n  return [\n    {property: 'clientId', label: 'App ID'},\n    {property: 'secret', label: 'App secret'}\n  ];\n};\n","MeteorDeveloperAccounts = {};\n\n// Request Meteor developer account credentials for the user\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\nvar requestCredential = function (options, credentialRequestCompleteCallback) {\n  // support a callback without options\n  if (! credentialRequestCompleteCallback && typeof options === \"function\") {\n    credentialRequestCompleteCallback = options;\n    options = null;\n  }\n\n  var config = ServiceConfiguration.configurations.findOne({\n    service: 'meteor-developer'\n  });\n  if (!config) {\n    credentialRequestCompleteCallback &&\n      credentialRequestCompleteCallback(new ServiceConfiguration.ConfigError());\n    return;\n  }\n\n  var credentialToken = Random.secret();\n\n  var loginUrl =\n        METEOR_DEVELOPER_URL + \"/oauth2/authorize?\" +\n        \"state=\" + credentialToken +\n        \"&response_type=code&\" +\n        \"client_id=\" + config.clientId;\n\n  if (options && options.userEmail)\n    loginUrl += '&user_email=' + encodeURIComponent(options.userEmail);\n\n  loginUrl += \"&redirect_uri=\" + Meteor.absoluteUrl(\"_oauth/meteor-developer?close\");\n\n  OAuth.showPopup(\n    loginUrl,\n    _.bind(credentialRequestCompleteCallback, null, credentialToken),\n    {\n      width: 470,\n      height: 420\n    }\n  );\n};\n\nMeteorDeveloperAccounts.requestCredential = requestCredential;\n"]}