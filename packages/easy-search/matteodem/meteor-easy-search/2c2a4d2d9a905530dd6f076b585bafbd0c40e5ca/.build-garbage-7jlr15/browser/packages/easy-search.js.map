{"version":3,"file":"/packages/easy-search.js","sources":["easy-search/lib/easy-search-client.js","easy-search/lib/components/easy-search-components.html","easy-search/lib/components/easy-search-components.js"],"names":[],"mappings":";;;;;;;;AAAA,0B;AACA,iB;;AAEA,mB;AACA,c;AACA,qD;AACA,iD;AACA,wC;AACA,0C;AACA,kD;AACA,c;AACA,U;;AAEA,Y;AACA,W;AACA,gD;AACA,U;AACA,+B;AACA,kC;AACA,W;AACA,wD;AACA,oC;AACA,U;AACA,W;AACA,kD;AACA,U;AACA,+B;AACA,uC;AACA,qC;AACA,W;AACA,4D;AACA,oE;AACA,U;AACA,W;AACA,wC;AACA,U;AACA,iC;AACA,uC;AACA,qC;AACA,W;AACA,uE;AACA,6C;AACA,wE;AACA,e;AACA,U;AACA,W;AACA,kE;AACA,U;AACA,+B;AACA,8B;AACA,gC;AACA,W;AACA,uD;AACA,sE;AACA,U;AACA,W;AACA,6C;AACA,Y;AACA,oC;AACA,2B;AACA,S;AACA,M;AACA,I;;;;;;;;;;;;;;;;;;;;AC7DA,4C;AACA,kB;AACA,sB;AACA,qB;AACA,iB;AACA,oB;AACA,mD;AACA,M;AACA,6B;AACA,4D;AACA,M;AACA,yB;AACA,wD;AACA,K;AACA,K;AACA,I;;AAEA,2C;AACA,kB;AACA,sB;AACA,6B;AACA,2D;AACA,0B;AACA,oB;AACA,2F;AACA,8C;AACA,4B;AACA,sB;AACA,2C;AACA,kC;AACA,S;AACA,qB;AACA,M;AACA,I;;AAEA,oD;AACA,kB;AACA,sB;AACA,2B;AACA,sD;AACA,0B;AACA,oB;AACA,sF;AACA,gC;AACA,oB;AACA,M;AACA,I;;AAEA,qD;AACA,kB;AACA,sB;AACA,2B;AACA,uD;AACA,0B;AACA,oB;AACA,sF;AACA,gC;AACA,oB;AACA,M;AACA,I;;AAEA,gD;AACA,kB;AACA,sB;AACA,Y;AACA,I;;AAEA,kD;AACA,kB;AACA,sB;AACA,Y;AACA,I;;;;;;;;;;;;;;;;;;;ACxEA,c;AACA,iB;;AAEA,e;AACA,iB;AACA,mB;AACA,wB;AACA,iD;;AAEA,qB;AACA,gB;AACA,6B;AACA,0B;AACA,yB;AACA,M;AACA,I;AACA,6C;;AAEA,qB;AACA,iF;;AAEA,qB;AACA,kB;AACA,sB;AACA,gC;AACA,0C;AACA,mC;AACA,U;AACA,wD;AACA,4B;;AAEA,sD;AACA,6B;AACA,8B;AACA,sC;AACA,U;AACA,qC;AACA,0D;AACA,S;AACA,M;;AAEA,qD;AACA,0D;AACA,K;AACA,8B;AACA,0B;AACA,8B;AACA,gC;AACA,yD;AACA,c;;AAEA,mB;AACA,S;;AAEA,mC;AACA,0B;AACA,4B;AACA,a;AACA,4B;AACA,+B;AACA,kE;AACA,a;AACA,U;AACA,K;;AAEA,oC;AACA,mC;AACA,mC;AACA,qC;AACA,yC;;AAEA,qC;AACA,oD;AACA,0E;AACA,mB;AACA,S;;AAEA,oE;AACA,sB;AACA,gE;AACA,a;;AAEA,yC;AACA,oD;AACA,uE;AACA,W;AACA,K;;AAEA,6C;AACA,oC;AACA,gC;;AAEA,2B;AACA,wD;AACA,S;;AAEA,iB;AACA,oC;AACA,S;;AAEA,2B;AACA,K;;;AAGA,iB;AACA,6B;AACA,sC;AACA,6B;AACA,4B;AACA,kC;AACA,6C;AACA,qD;AACA,gE;AACA,qD;AACA,gD;AACA,+C;;AAEA,yD;AACA,sD;AACA,kD;AACA,uB;AACA,a;;AAEA,wD;AACA,8C;AACA,uB;AACA,a;;AAEA,iD;AACA,2C;AACA,oC;AACA,a;;AAEA,sD;AACA,+C;AACA,4C;;AAEA,yC;AACA,0C;AACA,a;;AAEA,iD;AACA,sD;;AAEA,8D;AACA,wC;AACA,sC;AACA,4C;AACA,iD;AACA,mB;AACA,uD;AACA,e;AACA,S;AACA,O;;AAEA,gB;AACA,6C;AACA,+B;AACA,O;;AAEA,6B;AACA,0C;AACA,uB;AACA,0B;AACA,2B;AACA,6C;AACA,qD;;AAEA,mC;AACA,0B;AACA,a;;AAEA,+B;;AAEA,2B;AACA,8C;AACA,6B;AACA,a;;AAEA,0B;AACA,+B;AACA,iD;AACA,+C;AACA,qF;AACA,a;AACA,S;AACA,O;;AAEA,yB;AACA,wD;AACA,iD;AACA,2D;;AAEA,gD;AACA,M;;AAEA,0B;AACA,0D;AACA,mD;;AAEA,2E;AACA,iD;AACA,yB;AACA,S;;AAEA,oE;AACA,K;AACA,K","sourcesContent":["EasySearch = function () {\n    'use strict';\n\n    var indexes = {\n            /*\n            collection: Meteor.Collection (required),\n            field: [string] || string (required),\n            limit: number (default: 10),\n            exact: boolean (default false)\n            caseSensitive: boolean (default false)\n            */\n        };\n\n    return {\n        /**\n         * Create a search \"index\" to search on.\n         *\n         * @param {String} name\n         * @param {Object} options\n         */\n        'createSearchIndex' : function (name, options) {\n            indexes[name] = options;\n        },\n        /**\n         * Search over one of the defined indexes.\n         *\n         * @param {String} name\n         * @param {String} searchString\n         * @param {Function} callback\n         */\n        'search' : function (name, searchString, callback) {\n            Meteor.call('easySearch', name, searchString, callback);\n        },\n        /**\n         * Search over multiple indexes.\n         *\n         * @param {array} indexes\n         * @param {String} searchString\n         * @param {Function} callback\n         */\n        'searchMultiple' : function (indexes, searchString, callback) {\n            _.each(indexes, function (name) {\n                Meteor.call('easySearch', name, searchString, callback);\n            });\n        },\n        /**\n         * Allow easily changing properties, for example limiting.\n         *\n         * @param {String} name\n         * @param {String} key\n         * @param {Object} value\n         */\n        'changeProperty' : function(name, key, value) {\n            Meteor.call('easySearchChangeProperty', name, key, value);\n        },\n        /**\n          * Retrieve all index configurations\n          */\n        'getIndexes' : function () {\n            return indexes;\n        }\n    };\n}();\n","\nTemplate.__define__(\"esInput\", (function() {\n  var self = this;\n  var template = this;\n  return HTML.INPUT({\n    type: \"text\",\n    id: function() {\n      return Spacebars.mustache(self.lookup(\"id\"));\n    },\n    placeholder: function() {\n      return Spacebars.mustache(self.lookup(\"placeholder\"));\n    },\n    \"class\": function() {\n      return Spacebars.mustache(self.lookup(\"classes\"));\n    }\n  });\n}));\n\nTemplate.__define__(\"esEach\", (function() {\n  var self = this;\n  var template = this;\n  return UI.Each(function() {\n    return Spacebars.call(self.lookup(\"elasticSearchDoc\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n        \", UI.InTemplateScope(template, Spacebars.TemplateWith(function() {\n      return Spacebars.call(self.lookup(\".\"));\n    }, UI.block(function() {\n      var self = this;\n      return Spacebars.include(function() {\n        return template.__content;\n      });\n    }))), \"\\n    \" ];\n  }));\n}));\n\nTemplate.__define__(\"ifEsIsSearching\", (function() {\n  var self = this;\n  var template = this;\n  return UI.If(function() {\n    return Spacebars.call(self.lookup(\"isSearching\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n        \", UI.InTemplateScope(template, Spacebars.include(function() {\n      return template.__content;\n    })), \"\\n    \" ];\n  }));\n}));\n\nTemplate.__define__(\"ifEsHasNoResults\", (function() {\n  var self = this;\n  var template = this;\n  return UI.If(function() {\n    return Spacebars.call(self.lookup(\"hasNoResults\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n        \", UI.InTemplateScope(template, Spacebars.include(function() {\n      return template.__content;\n    })), \"\\n    \" ];\n  }));\n}));\n\nTemplate.__define__(\"esSearchBox\", (function() {\n  var self = this;\n  var template = this;\n  return \"\";\n}));\n\nTemplate.__define__(\"esAutosuggest\", (function() {\n  var self = this;\n  var template = this;\n  return \"\";\n}));\n","(function () {\n    'use strict';\n\n    var m = {},\n        defaults,\n        LocalTimer,\n        inputCache = {},\n        LocalCache = new Meteor.Collection(null);\n\n    // Default values\n    defaults = {\n        'inputTimeout' : 200,\n        'reactive' : true,\n        'event' : 'keyup'\n    };\n    \n    Session.setDefault('notSearching', true);\n\n    // Error Messages\n    m.specifyIndex = 'Specify an index, for example {{> esInput index=\"name\"}}!';\n\n    // A simple timer\n    LocalTimer = {\n        'timers' : {},\n        'stop' : function (id) {\n            clearTimeout(this.timers[id]);\n            delete this.timers[id];\n        },\n        'runAt' : function (id, millSec, func, params) {\n            var that = this;\n\n            this.timers[id] = setTimeout(function () {\n                func(params);\n                that.stop(id);\n            }, parseInt(millSec, 10));\n        },\n        'isRunning' : function (id) {\n            return \"undefined\" !== typeof this.timers[id];\n        }\n    };\n\n    // Add the search results to cache and process it\n    function processSearchResults(index, data, isReactive)\n    {\n        // Just store the data\n        if (!isReactive) {\n            LocalCache.upsert(\n                { _id : index },\n                { _id : index, r : isReactive, d : data }\n            );\n\n            return;\n        }\n\n        // If it has to be reactive\n        LocalCache.upsert(\n            { _id : index },\n            {\n                _id : index,\n                r : isReactive,\n                d : _.map(data, function(doc) { return doc._id; })\n            }\n        );\n    }\n\n    // Perform a search with esInput\n    function esInputSearch (conf) {\n        var id = conf.easySearchID,\n            searchValue = conf.value,\n            index = conf.easySearchIndex;\n\n        if (searchValue.length < 1) {\n            Session.set('esSearching_' + id, false);\n            LocalCache.upsert({ _id : index }, { _id : index, d : null });\n            return;\n        }\n\n        EasySearch.search(index, searchValue, function (err, data) {\n            if (err) {\n                throw new Meteor.Error(500, \"Searching failed\");\n            }\n\n            inputCache[id] = searchValue;\n            Session.set('esSearching_' + id, false);\n            processSearchResults(index, data, conf.easySearchReactive);\n        });\n    }\n\n    // Generate an id used for the components\n    function generateId(index, id) {\n        var generatedId = index;\n\n        if (!generatedId) {\n            throw new Meteor.Error(400, m.specifyIndex);\n        }\n\n        if (id) {\n            generatedId += '_' + id;\n        }\n\n        return generatedId;\n    }\n\n\n    /* esInput */\n    Template.esInput.events({\n        'keyup input' : function (e) {\n            var i, id, index,\n                searchValue,\n                eventScope = this,\n                searchCache = inputCache[id],\n                reactive = this.reactive !== \"false\",\n                timeout = this.timeout || defaults.inputTimeout,\n                event = this.event || defaults.event,\n                searchValue = $(e.target).val(),\n                keyCode = e.keyCode || e.which;\n\n            // Pressed not enter with enter configuration\n            if (\"enter\" === event && 13 !== keyCode) {\n                Session.set('notSearching', true);\n                return;\n            }\n\n            // Only search when the value hasn't changed\n            if (searchCache === searchValue) {\n                return;\n            }\n\n            // If already running, stop the timer\n            if (LocalTimer.isRunning(id)) {\n                LocalTimer.stop(id);\n            }\n\n            // Run the search at the specified timeout\n            Session.set('notSearching', false);\n            searchValue = $(e.target).val();\n\n            if (!_.isArray(this.index)) {\n                this.index = [this.index];\n            }\n\n            _.each(this.index, function (index) {\n                id = generateId(index, eventScope.id);\n\n                LocalTimer.runAt(id, timeout, esInputSearch, {\n                    value : searchValue,\n                    easySearchID : id,\n                    easySearchIndex : index,\n                    easySearchReactive : reactive\n                });\n                Session.set('esSearching_' + id, true);\n            });\n        }\n    });\n\n    /* esEach */\n    UI.registerHelper('esEach', function () {\n        return Template.esEach;\n    });\n\n    Template.esEach.helpers({\n        'elasticSearchDoc' : function () {\n            var config,\n                indexConf,\n                isReactive,\n                options = this.options || {},\n                doc = LocalCache.findOne(this.index);\n\n            if (!_.isObject(doc)) {\n                return [];\n            }\n\n            isReactive = doc.r;\n\n            // Not reactive\n            if (doc && doc.d && !isReactive) {\n                return doc.d;\n            }\n\n            // Is reactive\n            if (doc && doc.d) {\n                config = EasySearch.getIndexes();\n                indexConf = config[this.index];\n                return indexConf.collection.find({ _id : { $in : doc.d } }, options);\n            }\n        }\n    });\n\n    /* ifEsIsSearching */\n    Template.ifEsIsSearching.isSearching = function () {\n        var id = generateId(this.index, this.id),\n            isSearching = Session.get('esSearching_' + id);\n\n        return isSearching ? isSearching : null;\n    };\n\n    /* ifEsHasNoResults */\n    Template.ifEsHasNoResults.hasNoResults = function () {\n        var cache = LocalCache.findOne(this.index);\n\n        if ((Session.get('esSearching_' + generateId(this.index, this.id)))\n                || Session.get('notSearching')) {\n            return false;\n        }\n\n        return !(cache && _.isArray(cache.d) && cache.d.length > 0);\n    }\n})();\n"]}